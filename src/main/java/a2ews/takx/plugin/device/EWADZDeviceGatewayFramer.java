package a2ews.takx.plugin.device;

import gov.takx.api.messages.IPrePersistRaptorCommandMessage;
import gov.takx.api.plugin.gateway.AGatewayFramer;
import gov.takx.api.plugin.gateway.IGatewayFramerDelegate;

import java.io.IOException;

/**
 * Converts data extracted from {@link gov.takx.api.messages.IRaptorCommandMessage}s to bytes to be sent to a device
 * via a connection.
 *
 * @author Proprietary information subject to the terms of a Non-Disclosure Agreement
 */
public class EWADZDeviceGatewayFramer extends AGatewayFramer
{
    /**
     * Constructor.
     *
     * @param delegate Delegate used to access core functionality.
     */
    protected EWADZDeviceGatewayFramer(IGatewayFramerDelegate delegate)
    {
        super(delegate);
    }

    /**
     * Processes command messages that have been generated by the {@link EWADZDevicePluginController},
     * converting the values to the format that is understood by a device.
     *
     * @param rcm The command message.
     */
    @Override
    public void processMessage(IPrePersistRaptorCommandMessage rcm) throws IOException
    {
        // Check if the message type is the type we're looking for.
        if (rcm.getMessageType().equals(EWADZDeviceConstants.UPDATE_MESSAGE))
        {
            // Get the pertinent value(s) from the message.
            int newRate = rcm.getInt(EWADZDeviceConstants.RATE);

            // Convert the data to the format that the device understands.
            String command = "$rate," + (newRate * 1000) + "*";

            // Hand message to core to be sent to the device via the connection.
            delegate.sendToCommOut(command);
        }
    }
}
